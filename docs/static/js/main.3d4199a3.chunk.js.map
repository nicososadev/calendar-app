{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginPage.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","actions/events.js","components/calendar/CalendarModal.js","components/ui/AddEventFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarPage.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","login","user","type","payload","logout","checkingFinish","useForm","inicialState","useState","values","setValues","cleanInput","handleInputChange","target","name","value","LoginPage","dispatch","useDispatch","loginEmail","loginPassword","LoginFormValues","handleLoginInputChange","registerName","registerEmail","registerPassword","registerPassword2","RegisterFormValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","response","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","onChange","placeholder","Navbar","useSelector","state","auth","onClick","clear","CalendarEvent","event","title","uiOpenModal","cleanActiveEvent","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","moment","minutes","seconds","add","initEvent","notes","start","toDate","end","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","createEvent","id","_id","minDate","autoComplete","rows","AddEventFab","DeleteEventFab","localizer","momentLocalizer","CalendarPage","events","lastView","setLastView","startAccessor","endAccessor","height","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","initialState","bgcolor","rootReducer","combineReducers","action","map","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"2QAAMA,EAAUC,uDAEHC,EAAoB,SAACC,EAAUC,EAAMC,GAE9C,IAAMC,EAAG,UAAMN,EAAN,YAAiBG,GAE1B,MAAe,QAAXE,EAEOE,MAAMD,GAGNC,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,MAKpBQ,EAAiB,SAACT,EAAUC,EAAMC,GAE3C,IAAMC,EAAG,UAAMN,EAAN,YAAiBG,GACpBU,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAe,QAAXV,EAEOE,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,UAAWK,KAKZN,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAUP,MC1CpBY,EAEI,kBAFJA,EAGK,mBAHLA,EAKI,uBALJA,EAMI,uBANJA,EAOI,uBAPJA,EAQO,qBARPA,EASS,6BATTA,EAWa,uCAXbA,EAYE,eAZFA,EAgBG,gBCoEVC,EAAQ,SAACC,GAEX,MAAO,CACHC,KAAMH,EACNI,QAASF,IAIXG,EAAS,WAEX,MAAO,CACHF,KAAMH,IAIRM,EAAiB,WAEnB,MAAO,CACHH,KAAMH,I,uBCpGDO,EAAU,WAA0B,IAAxBC,EAAuB,uDAAR,GAAQ,EAEhBC,mBAAUD,GAFM,mBAErCE,EAFqC,KAE7BC,EAF6B,KAItCC,EAAa,WACfD,EAAWH,IAGTK,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEHI,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEN,EAAQG,EAAmBD,ICX3BK,G,MAAY,WAErB,IAAMC,EAAWC,cAFU,EAgByBZ,EAZtB,CAC1Ba,WAAY,oBACZC,cAAe,WANQ,mBAgBnBC,EAhBmB,KAgBFC,EAhBE,OAkB+BhB,EATzB,CAC7BiB,aAAc,OACdC,cAAe,iBACfC,iBAAkB,SAClBC,kBAAmB,WAbI,mBAkBnBC,EAlBmB,KAkBCC,EAlBD,KAoBnBT,EAA8BE,EAA9BF,WAAYC,EAAkBC,EAAlBD,cAEZG,EAAqEI,EAArEJ,aAAcC,EAAuDG,EAAvDH,cAAeC,EAAwCE,EAAxCF,iBAAkBC,EAAsBC,EAAtBD,kBAkBvD,OACI,yBAAKG,UAAU,6BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBAEX,uCAEA,0BAAMC,SAvBF,SAACC,GF5BG,IAACC,EAAOC,EE6B5BF,EAAEG,iBAEFjB,GF/BqBe,EE+BEb,EF/BKc,EE+BOb,EF7BvC,uCAAO,WAAOH,GAAP,iBAAAkB,EAAA,sEAEoBlD,EAAkB,OAAQ,CAAE+C,QAAOC,YAAY,QAFnE,cAEGG,EAFH,gBAIgBA,EAASC,OAJzB,QAIG7C,EAJH,QAMM8C,IACLzC,aAAa0C,QAAQ,QAAS/C,EAAKI,OACnCC,aAAa0C,QAAQ,iBAAiB,IAAIC,MAAOC,WAEjDxB,EAASjB,EAAM,CACX0C,IAAKlD,EAAKkD,IACV5B,KAAMtB,EAAKsB,SAIf6B,IAAKC,KAAK,QAASpD,EAAKqD,IAAK,SAhB9B,2CAAP,0DEmDoB,yBAAKhB,UAAU,cACX,2BACI3B,KAAK,OACL2B,UAAU,eACVf,KAAK,aAAaC,MAAOI,EACzB2B,SAAUxB,EACVyB,YAAY,WAGpB,yBAAKlB,UAAU,cACX,2BACI3B,KAAK,WACL2B,UAAU,eACVf,KAAK,gBACLC,MAAOK,EACP0B,SAAUxB,EACVyB,YAAY,cAGpB,yBAAKlB,UAAU,cACX,2BAAO3B,KAAK,SAAS2B,UAAU,YAAYd,MAAM,aAK7D,yBAAKc,UAAU,yBAEX,wCAEA,0BAAMC,SAhDC,SAACC,GFXG,IAACjB,EAAMkB,EAAOC,EEYrCF,EAAEG,iBAEGT,IAAqBC,GACtBiB,IAAKC,KAAK,QAAS,4BAA6B,SAGpD3B,GFlBwBH,EEkBES,EFlBIS,EEkBUR,EFlBHS,EEkBkBR,EFhB3D,uCAAO,WAAOR,GAAP,iBAAAkB,EAAA,sEAEoBlD,EAAkB,gBAAiB,CAAE6B,OAAMkB,QAAOC,YAAY,QAFlF,cAEGG,EAFH,gBAIgBA,EAASC,OAJzB,QAIG7C,EAJH,QAMM8C,IACLzC,aAAa0C,QAAQ,QAAS/C,EAAKI,OACnCC,aAAa0C,QAAQ,iBAAiB,IAAIC,MAAOC,WAEjDxB,EAASjB,EAAM,CACX0C,IAAKlD,EAAKkD,IACV5B,KAAMtB,EAAKsB,SAIf6B,IAAKC,KAAK,QAASpD,EAAKqD,IAAK,SAhB9B,2CAAP,0DE2DoB,yBAAKhB,UAAU,cACX,2BACI3B,KAAK,OACL2B,UAAU,eACVf,KAAK,eACLC,MAAOQ,EACPuB,SAAUlB,EACVmB,YAAY,UAEpB,yBAAKlB,UAAU,cACX,2BACI3B,KAAK,QACL2B,UAAU,eACVf,KAAK,gBACLC,MAAOS,EACPsB,SAAUlB,EACVmB,YAAY,WAEpB,yBAAKlB,UAAU,cACX,2BACI3B,KAAK,WACL2B,UAAU,eACVf,KAAK,mBACLC,MAAOU,EACPqB,SAAUlB,EACVmB,YAAY,cAGpB,yBAAKlB,UAAU,cACX,2BACI3B,KAAK,WACL2B,UAAU,eACVf,KAAK,oBACLC,MAAOW,EACPoB,SAAUlB,EACVmB,YAAY,sBAGpB,yBAAKlB,UAAU,cACX,2BAAO3B,KAAK,SAAS2B,UAAU,YAAYd,MAAM,wB,yBC3HhEiC,EAAS,WAElB,IAAM/B,EAAWC,cAOTJ,EAASmC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAApCrC,KAER,OACI,yBAAKe,UAAU,mCACX,0BAAMA,UAAU,gBAAiBf,GAEjC,4BAAQsC,QAXK,WAEjBnC,GHkEG,SAACA,GAEJpB,aAAawD,QAEbpC,EAAUb,SG7DyByB,UAAU,kBACrC,uBAAGA,UAAU,wBACb,2CCnBHyB,G,MAAgB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEpBC,EAAgBD,EAAhBC,MAAOvD,EAASsD,EAATtD,KAEf,OAEI,6BACI,8BAAQuD,GACR,sCAAavD,EAAKa,S,kCCRjB2C,G,OAAc,WAEvB,MAAO,CACHvD,KAAMH,KCgBD2D,EAAmB,WAE5B,MAAO,CAEHxD,KAAMH,ICdR4D,EAAe,CACjBC,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAInBC,IAAMC,cAAc,SAEpB,IAAMC,EAAMC,MAASC,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAG,SAE5CC,EAAY,CACdlB,MAAO,GACPmB,MAAO,GACPC,MAAOP,EAAIQ,SACXC,IAAKT,EAAII,IAAI,EAAE,SAASI,UAGfE,EAAgB,WAAO,IAExBC,EAAc/B,aAAY,SAAAC,GAAK,OAAIA,EAAM+B,MAAzCD,UACAE,EAAgBjC,aAAY,SAAAC,GAAK,OAAIA,EAAMiC,YAA3CD,YAHuB,EAMG1E,mBAAU6D,EAAIQ,UANjB,mBAMxBO,EANwB,KAMbC,EANa,OAOD7E,mBAAU6D,EAAII,IAAI,EAAG,QAAQI,UAP5B,mBAOxBS,EAPwB,KAOfC,EAPe,OAQK/E,oBAAS,GARd,mBAQxBgF,EARwB,KAQZC,EARY,OAUKjF,mBAASkE,GAVd,mBAUxBgB,EAVwB,KAUZC,EAVY,KAYvBnC,EAA6BkC,EAA7BlC,MAAOmB,EAAsBe,EAAtBf,MAAOC,EAAec,EAAfd,MAAOE,EAAQY,EAARZ,IAE7Bc,qBAAU,WAGFD,EADAT,GAGeR,KAGpB,CAACQ,EAAaS,IAEjB,IAAM1E,EAAWC,cAGX2E,EAAa,WAEf5E,EFnDG,CACHf,KAAMH,IEmDNkB,EAAUyC,KACViC,EAAejB,IAGb9D,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzB8E,EAAc,2BACPD,GADM,kBAER7E,EAAOC,KAAOD,EAAOE,UAuD9B,OAEI,kBAAC,IAAD,CACI+E,OAAQd,EAERe,eAAgBF,EAChBG,MAAOrC,EACPsC,eAAgB,IAChBpE,UAAU,QACVqE,iBAAiB,eAEjB,gCAAOhB,EAAc,gBAAkB,gBACvC,6BACA,0BAAMpD,SAhDW,SAACC,GACtBA,EAAEG,iBAEF,IAAMiE,EAAc7B,IAAQM,GACtBwB,EAAY9B,IAAQQ,GAE1B,OAAIqB,EAAYE,cAAeD,GAEpBzD,IAAKC,KAAK,QAAS,mDAAoD,SAG9EY,EAAM8C,OAAOC,OAAS,EAEfd,GAAc,IAKrBxE,EAFAiE,ED3ED,CAEHhF,KAAMH,EACNI,QC0E2BuF,GD1GR,SAACnC,GAExB,MAAO,CAEHrD,KAAMH,EACNI,QAASoD,GCwGKiD,CAAY,yBAClBC,IAAI,IAAIjE,MAAOC,WACZiD,GAFc,IAGjBzF,KAAM,CACFyG,IAAK,MACL5F,KAAM,eAKlB2E,GAAc,QACdI,MAgBsChE,UAAU,aAExC,yBAAKA,UAAU,cACX,sDACA,kBAAC,IAAD,CAAgBA,UAAU,eAAeiB,SApE3B,SAACf,GAC3BsD,EAActD,GACd4D,EAAc,2BACPD,GADM,IAETd,MAAO7C,MAgE2EhB,MAAOqE,KAGrF,yBAAKvD,UAAU,cACX,mDACA,kBAAC,IAAD,CAAgBA,UAAU,eAAe8E,QAASvB,EAAWtC,SAjEjD,SAACf,GACzBwD,EAAYxD,GACZ4D,EAAc,2BACPD,GADM,IAETZ,IAAK/C,MA6D+FhB,MAAOuE,KAGvG,6BACA,yBAAKzD,UAAU,cACX,iDACA,2BACI3B,KAAK,OACL2B,UAAS,wBAAoB2D,GAAc,cAC3CzC,YAAY,uBACZjC,KAAK,QACLC,MAAOyC,EACPV,SAAUlC,EACVgG,aAAa,QAEjB,2BAAOH,GAAG,YAAY5E,UAAU,wBAAhC,6BAGJ,yBAAKA,UAAU,cACX,8BACI3B,KAAK,OACL2B,UAAU,eACVkB,YAAY,QACZ8D,KAAK,IACL/F,KAAK,QACLC,MAAO4D,EACP7B,SAAUlC,IAEd,2BAAO6F,GAAG,YAAY5E,UAAU,wBAAhC,6BAGJ,4BACI3B,KAAK,SACL2B,UAAU,qCAEV,uBAAGA,UAAU,gBACb,8CCnLPiF,EAAc,WAEvB,IAAM7F,EAAWC,cAOjB,OAEI,6BACI,4BACIW,UAAU,sBACVuB,QAVW,WAEnBnC,EAAUwC,OAWN,uBAAG5B,UAAU,mBCjBZkF,EAAiB,WAE1B,IAAM9F,EAAWC,cAOjB,OAEI,6BACI,4BACIW,UAAU,4BACVuB,QAVc,WAEtBnC,EH8BG,CAEHf,KAAMH,MGrBF,uBAAG8B,UAAU,oBCPnBmF,EAAYC,YAAgB3C,KAErB4C,GAAe,WAExB,IAAMjG,EAAWC,cAFa,EAIE+B,aAAY,SAAAC,GAAK,OAAIA,EAAMiC,YAAnDgC,EAJsB,EAItBA,OAAQjC,EAJc,EAIdA,YAJc,EAME1E,mBAAUX,aAAaC,QAAQ,aAAe,SANhD,mBAMvBsH,EANuB,KAMbC,EANa,KA6B9B,OAEI,6BACI,kBAAC,EAAD,MAEA,kBAAC,IAAD,CACIL,UAAWA,EACXG,OAAQA,EACRG,cAAc,QACdC,YAAY,MACZvB,MAAO,CAAEwB,OAAQ,KACjBC,mBAhCU,SAAC1F,GAEnBd,EAAUwC,MA+BFiE,cA3BU,SAAC3F,GAEnBd,EJnBG,CAEHf,KAAMH,EACNI,QIgBoB4B,KA0BZ4F,OAvBS,SAAC5F,GAClBsF,EAAYtF,GACZlC,aAAa0C,QAAQ,WAAYR,IAsBzB6F,aAnBS,SAAC7F,GAElBd,EAAUyC,MAkBFmE,YAAY,EACZC,KAAMV,EACNW,WAAY,CACRxE,MAAOD,KAIf,kBAAC,EAAD,MAGM4B,GACE,kBAAC,EAAD,MAIR,kBAAC,EAAD,Q,SCvEC8C,GAAe,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,gBAA4BC,EAAyB,EAApCC,UAAyBC,EAAW,gDAEhF,OAEI,kBAAC,IAAD,iBAAWA,EAAX,CACID,UAAY,SAACE,GAAD,OACPJ,EACK,kBAACC,EAAcG,GACf,kBAAC,IAAD,CAAUC,GAAG,gBCRtBC,GAAc,SAAC,GAAwD,IAAtDN,EAAqD,EAArDA,gBAA4BC,EAAyB,EAApCC,UAAyBC,EAAW,gDAE/E,OAEI,kBAAC,IAAD,iBAAWA,EAAX,CACID,UAAY,SAACE,GAAD,OACNJ,EAEI,kBAAC,IAAD,CAAUK,GAAG,MADb,kBAACJ,EAAcG,QCFxBG,GAAY,WAErB,IAAMvH,EAAWC,cAFU,EAID+B,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAA7CsF,EAJmB,EAInBA,SAAU/F,EAJS,EAITA,IAOlB,OALAkD,qBAAU,WACN3E,EbqCJ,uCAAO,WAAOA,GAAP,iBAAAkB,EAAA,sEAEoBxC,EAAe,aAAc,GAAI,OAFrD,cAEGyC,EAFH,gBAIgBA,EAASC,OAJzB,QAIG7C,EAJH,QAMM8C,IACLzC,aAAa0C,QAAQ,QAAS/C,EAAKI,OACnCC,aAAa0C,QAAQ,iBAAiB,IAAIC,MAAOC,WAEjDxB,EAASjB,EAAM,CACX0C,IAAKlD,EAAKkD,IACV5B,KAAMtB,EAAKsB,SAIfG,EAAUZ,KAhBX,2CAAP,yDanCG,CAACY,IAECwH,EAEO,uCAMR,kBAAC,IAAD,KACI,6BACI,kBAAC,IAAD,KACI,kBAAC,GAAD,CAAaC,OAAK,EAACC,KAAK,SAASV,kBAAoBvF,EAAMyF,UAAYnH,IACvE,kBAAC,GAAD,CAAc0H,OAAK,EAACC,KAAK,IAAIV,kBAAoBvF,EAAMyF,UAAYjB,KAEnE,kBAAC,IAAD,CAAUoB,GAAG,U,kBChC3BM,GAAe,CACjBH,UAAU,G,SCARG,GAAe,CACjBzB,OAAQ,CAAC,CACLV,IAAI,IAAIjE,MAAOC,UACfe,MAAO,yBACPoB,MAAON,MAASO,SAChBC,IAAKR,MAASG,IAAI,EAAG,SAASI,SAC9BgE,QAAS,UACT5I,KAAM,CACFyG,IAAK,MACL5F,KAAM,aAGdoE,YAAa,MCbX0D,GAAe,CACjB5D,WAAW,GCEF8D,GAAcC,aAAgB,CACvC9D,GDAqB,WAAoC,IAAlC/B,EAAiC,uDAAzB0F,GAAcI,EAAW,uCAExD,OAAQA,EAAO9I,MAEX,KAAKH,EACD,kCACOmD,GADP,IAEI8B,WAAW,IAGnB,KAAKjF,EACD,kCACOmD,GADP,IAEI8B,WAAW,IAInB,QACI,OAAO9B,ICjBfiC,SFW2B,WAAmC,IAAlCjC,EAAiC,uDAAzB0F,GAAcI,EAAW,uCAE7D,OAAQA,EAAO9I,MAEX,KAAKH,EAED,OAAO,2BACAmD,GADP,IAEIiE,OAAO,GAAD,oBAAMjE,EAAMiE,QAAZ,CAAoB6B,EAAO7I,YAGzC,KAAKJ,EAED,OAAO,2BACAmD,GADP,IAEIgC,YAAa8D,EAAO7I,UAG5B,KAAKJ,EAED,OAAO,2BACAmD,GADP,IAEIgC,YAAa,OAGrB,KAAKnF,EAED,OAAO,2BACAmD,GADP,IAEIiE,OAAQjE,EAAMiE,OAAO8B,KACjB,SAAA1F,GAAK,OAAMA,EAAMkD,KAAOuC,EAAO7I,QAAQsG,GACjCuC,EAAO7I,QACPoD,OAIlB,KAAKxD,EAED,OAAO,2BACAmD,GADP,IAEIiE,OAAQjE,EAAMiE,OAAO+B,QACjB,SAAA3F,GAAK,OAAMA,EAAMkD,KAAOvD,EAAMgC,YAAYuB,MAE9CvB,YAAa,OAIrB,QACI,OAAOhC,IE1DfC,KHAuB,WAAoC,IAAlCD,EAAiC,uDAAzB0F,GAAcI,EAAW,uCAE1D,OAAQA,EAAO9I,MAEX,KAAKH,EACD,OAAO,uCACAmD,GACA8F,EAAO7I,SAFd,IAGIsI,UAAU,IAGlB,KAAK1I,EACD,OAAO,2BACAmD,GADP,IAEIuF,UAAU,IAGlB,KAAK1I,EACD,MAAO,CACH0I,UAAU,GAGlB,QACI,OAAOvF,MI1BbiG,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAE9FC,GAAQC,aACjBV,GACAK,GACIM,aAAgBC,QCLXC,GAAc,WAEvB,OAEI,kBAAC,IAAD,CAAUJ,MAAOA,IACb,kBAAC,GAAD,Q,OCJZK,IAASC,OAAO,kBAAC,GAAD,MAAiBC,SAASC,eAAe,U","file":"static/js/main.3d4199a3.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL\r\n\r\nexport const fetchWithoutToken = (endpoint, data, method) => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`\r\n\r\n    if (method === 'GET') {\r\n\r\n        return fetch(url)\r\n    } else {\r\n\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchWithToken = (endpoint, data, method) => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`\r\n    const token = localStorage.getItem('token') || ''\r\n\r\n    if (method === 'GET') {\r\n\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        })\r\n    } else {\r\n\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n\r\n}","export const types = {\r\n\r\n    uiOpenModal: '[UI] Open Modal',\r\n    uiCloseModal: '[UI] Close Modal',\r\n    \r\n    eventCreate: '[Event] Create Event',\r\n    eventUpdate: '[Event] Update Event',\r\n    eventDelete: '[Event] Delete Event',\r\n    eventSetActive: '[Event] Set Active',\r\n    cleanActiveEvent: '[Event] Clean Active Event',\r\n\r\n    authCheckingFinished: '[Auth] Finished Checking login state',\r\n    authLogin: '[Auth] Login',\r\n    authLogged: '[Auth] Logged',\r\n    authRegister: '[Auth] Register',\r\n    authRenewToken: '[Auth] Renew Token',\r\n    authLogout: '[Auth] Logout',\r\n  \r\n}","import Swal from \"sweetalert2\"\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\"\r\n\r\nexport const loginManager = (email, password) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const response = await fetchWithoutToken('auth', { email, password }, 'POST')\r\n\r\n        const body = await response.json()\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('tokenInitDate', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const registerManager = (name, email, password) => {\r\n\r\n    return async (dispatch) => {\r\n        \r\n        const response = await fetchWithoutToken('auth/register', { name, email, password }, 'POST')\r\n    \r\n        const body = await response.json()\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('tokenInitDate', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const checkingManager = () => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const response = await fetchWithToken('auth/renew', {}, 'GET')\r\n    \r\n        const body = await response.json()\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('tokenInitDate', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            \r\n            dispatch( checkingFinish() )\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutManager = () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        localStorage.clear()\r\n\r\n        dispatch( logout() )\r\n    }\r\n}\r\n\r\nconst login = (user) => {\r\n\r\n    return {\r\n        type: types.authLogin,\r\n        payload: user\r\n    }\r\n}\r\n\r\nconst logout = () => {\r\n\r\n    return {\r\n        type: types.authLogout\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => {\r\n\r\n    return {\r\n        type: types.authCheckingFinished\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import { useState } from \"react\"\r\n\r\nexport const useForm = ( inicialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState( inicialState )\r\n\r\n    const cleanInput = () => {\r\n        setValues( inicialState )\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        \r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n\r\n        })\r\n    }\r\n\r\n    return [ values, handleInputChange, cleanInput ]\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { loginManager, registerManager } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nimport '../../styles/auth/login.css';\r\n\r\nexport const LoginPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const initalLoginFormValues = {\r\n        loginEmail: 'Nicolas@gmail.com',\r\n        loginPassword: '123456'\r\n    }\r\n\r\n    const initalRegisterFormValues = {\r\n        registerName: 'Sosa',\r\n        registerEmail: 'Sosa@gmail.com',\r\n        registerPassword: '123456',\r\n        registerPassword2: '123456'\r\n    }\r\n\r\n    const [ LoginFormValues, handleLoginInputChange ] = useForm(initalLoginFormValues)\r\n\r\n    const [ RegisterFormValues, handleRegisterInputChange ] = useForm(initalRegisterFormValues)\r\n\r\n    const { loginEmail, loginPassword } = LoginFormValues\r\n\r\n    const { registerName, registerEmail, registerPassword, registerPassword2 } = RegisterFormValues\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch( loginManager(loginEmail, loginPassword) )\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n\r\n        if ( registerPassword !== registerPassword2 ){\r\n            Swal.fire('Error', 'Password are not the same', 'error')\r\n        }\r\n        \r\n        dispatch( registerManager(registerName, registerEmail, registerPassword) )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n\r\n                    <h3>Ingreso</h3>\r\n\r\n                    <form onSubmit={handleLogin}>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                name=\"loginEmail\" value={loginEmail} \r\n                                onChange={handleLoginInputChange} \r\n                                placeholder=\"Email\" \r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"password\" \r\n                                className=\"form-control\" \r\n                                name=\"loginPassword\" \r\n                                value={loginPassword} \r\n                                onChange={handleLoginInputChange} \r\n                                placeholder=\"Password\" \r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n\r\n                    <h3>Registro</h3>\r\n\r\n                    <form onSubmit={handleRegister}>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                name=\"registerName\"\r\n                                value={registerName}\r\n                                onChange={handleRegisterInputChange}\r\n                                placeholder=\"Name\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"email\" \r\n                                className=\"form-control\" \r\n                                name=\"registerEmail\"\r\n                                value={registerEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                                placeholder=\"Email\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"password\" \r\n                                className=\"form-control\" \r\n                                name=\"registerPassword\"\r\n                                value={registerPassword}\r\n                                onChange={handleRegisterInputChange}\r\n                                placeholder=\"Password\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"password\" \r\n                                className=\"form-control\" \r\n                                name=\"registerPassword2\"\r\n                                value={registerPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                                placeholder=\"Confirm Password\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logoutManager } from '../../actions/auth'\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLogout = () => {\r\n\r\n        dispatch( logoutManager() )\r\n    }\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">{ name }</span>\r\n\r\n            <button onClick={handleLogout} className=\"btn btn-danger\">\r\n                <i className=\"fas fa-sign-out-alt\" ></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event\r\n\r\n    return (\r\n\r\n        <div>\r\n            <span>{ title }</span>\r\n            <strong> - { user.name }</strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = () => {\r\n\r\n    return {\r\n        type: types.uiOpenModal\r\n    }\r\n}\r\n\r\nexport const uiCloseModal = () => {\r\n\r\n    return {\r\n        type: types.uiCloseModal\r\n    }\r\n}\r\n","import { types } from '../types/types'\r\n\r\nexport const createEvent = (event) => {\r\n\r\n    return {\r\n\r\n        type: types.eventCreate,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport const setActive = (event) => {\r\n\r\n    return {\r\n        \r\n        type: types.eventSetActive,\r\n        payload: event\r\n    }\r\n}\r\n\r\n\r\nexport const cleanActiveEvent = () => {\r\n\r\n    return {\r\n        \r\n        type: types.cleanActiveEvent,\r\n    }\r\n}\r\n\r\nexport const updateEvent = (event) => {\r\n\r\n    return {\r\n        \r\n        type: types.eventUpdate,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport const deleteEvent = (event) => {\r\n\r\n    return {\r\n        \r\n        type: types.eventDelete\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport moment from 'moment'\r\nimport DateTimePicker from 'react-datetime-picker'\r\n\r\nimport '../../styles/calendar/modal.css'\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { cleanActiveEvent, createEvent, updateEvent } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours')\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: now.add(1,'hours').toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    \r\n    const { modalOpen } = useSelector(state => state.ui)\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n\r\n\r\n    const [dateStart, setDateStart] = useState( now.toDate() )\r\n    const [dateEnd, setDateEnd] = useState( now.add(1, 'hour').toDate() )\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const [formValues, setFormValues] = useState(initEvent)\r\n\r\n    const { title, notes, start, end } = formValues\r\n\r\n    useEffect(() => {\r\n        \r\n        if( activeEvent ){\r\n            setFormValues( activeEvent )\r\n        } else {\r\n            setFormValues( initEvent )\r\n        }\r\n\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const closeModal = () => {\r\n\r\n        dispatch( uiCloseModal() )\r\n        dispatch( cleanActiveEvent() )\r\n        setFormValues( initEvent )\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart( e )\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd( e )\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault()\r\n\r\n        const momentStart = moment( start )\r\n        const momentEnd = moment( end )\r\n\r\n        if( momentStart.isSameOrAfter( momentEnd ) ){\r\n\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error')\r\n        }\r\n\r\n        if( title.trim().length < 2 ){\r\n\r\n            return setTitleValid(false)\r\n        }\r\n\r\n        if( activeEvent ){\r\n\r\n            dispatch( updateEvent( formValues ) )\r\n        } else {\r\n\r\n            dispatch( createEvent({\r\n                id: new Date().getTime(),\r\n                ...formValues,\r\n                user: {\r\n                    _id: '123',\r\n                    name: 'Nicolas'\r\n                }\r\n            }))\r\n        }\r\n\r\n        setTitleValid(true)\r\n        closeModal()\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            //   onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> {(activeEvent)? 'Editar Evento' : 'Nuevo Evento' }</h1>\r\n            <hr />\r\n            <form onSubmit={handleSubmitForm} className=\"container\">\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker className=\"form-control\" onChange={handleStartDateChange} value={dateStart} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker className=\"form-control\" minDate={dateStart} onChange={handleEndDateChange} value={dateEnd} />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${ !titleValid && 'is-invalid' }`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\n\r\nexport const AddEventFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleNewEvent = () => {\r\n\r\n        dispatch( uiOpenModal() )\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <button\r\n                className=\"btn btn-primary fab\"\r\n                onClick={handleNewEvent}\r\n            \r\n            >\r\n            <i className=\"fas fa-plus\"></i>\r\n\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { deleteEvent } from '../../actions/events'\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDeleteEvent = () => {\r\n\r\n        dispatch( deleteEvent() )\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <button\r\n                className=\"btn btn-danger fab-danger\"\r\n                onClick={handleDeleteEvent}\r\n            \r\n            >\r\n            <i className=\"fas fa-trash\"></i>\r\n\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport { Navbar } from '../ui/Navbar'\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport { CalendarEvent } from './CalendarEvent'\r\nimport { CalendarModal } from './CalendarModal'\r\nimport { uiOpenModal } from '../../actions/ui'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setActive, cleanActiveEvent } from '../../actions/events'\r\nimport { AddEventFab } from '../ui/AddEventFab'\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\r\n\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport const CalendarPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { events, activeEvent } = useSelector(state => state.calendar)\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' )\r\n\r\n    const onDoubleClick = (e) => {\r\n        \r\n        dispatch( uiOpenModal() )\r\n\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n\r\n        dispatch( setActive(e) )\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n\r\n        dispatch( cleanActiveEvent() )\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                style={{ height: 850 }}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddEventFab/>\r\n\r\n            {\r\n                ( activeEvent ) &&\r\n                    <DeleteEventFab/>\r\n            }\r\n\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n\r\n    return (\r\n\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to=\"/login\" />\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n\r\n    return (\r\n\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (!isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to=\"/\" />\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom'\r\nimport { checkingManager } from '../actions/auth'\r\nimport { LoginPage } from '../components/auth/LoginPage'\r\nimport { CalendarPage } from '../components/calendar/CalendarPage'\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { PublicRoute } from './PublicRoute'\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch( checkingManager() )\r\n        \r\n    }, [dispatch])\r\n\r\n    if ( checking ) {\r\n\r\n        return (<h4>Wait...</h4>)\r\n\r\n    }\r\n\r\n    return (\r\n        \r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute exact path='/login' isAuthenticated={ !!uid } component={ LoginPage } />\r\n                    <PrivateRoute exact path='/' isAuthenticated={ !!uid } component={ CalendarPage } />\r\n\r\n                    <Redirect to='/' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        \r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinished:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n           \r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import moment from \"moment\"\r\nimport { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    events: [{\r\n        id: new Date().getTime(),\r\n        title: 'Cumpleaños del jefe',\r\n        start: moment().toDate(),\r\n        end: moment().add(2, 'hours').toDate(),\r\n        bgcolor: '#fafafa',\r\n        user: {\r\n            _id: '123',\r\n            name: 'Nicolas'\r\n        }\r\n    }],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.eventCreate:\r\n            \r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            }\r\n\r\n        case types.eventSetActive:\r\n            \r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.cleanActiveEvent:\r\n        \r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdate:\r\n    \r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    event => ( event.id === action.payload.id )\r\n                        ? action.payload\r\n                        : event\r\n                )\r\n            }\r\n\r\n        case types.eventDelete:\r\n    \r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    event => ( event.id !== state.activeEvent.id )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        \r\n        case types.uiOpenModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        \r\n        case types.uiCloseModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n\r\n                \r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n\r\n    return (\r\n        \r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CalendarApp } from './CalendarApp';\r\n\r\nimport './styles/styles.css'\r\n\r\nReactDOM.render(<CalendarApp />, document.getElementById('root'));\r\n"],"sourceRoot":""}